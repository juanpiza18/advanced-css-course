/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Define Font inherit to all elements */
body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* 1.7 bigger that the default */
  line-height: 1.7;
  color: #777;
  padding: 1.875rem;
}

.header {
  height: 95vh;
  /* to specify gradients we use background image always */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url("../img/hero.jpg");
  /* Fit the element inside the box and the viewport */
  background-size: cover;
  /* Top of the image always stays in the same position it doesnt change */
  background-position: top;
  /* Clip path property each parameter represents a coordinate in x --> y | 
   1: we do not want to move it so it is 0 0
   2: 100% of the width x, and y we don't want to move it
   3: x 100%, y change cause we want the point to be in 75vh
   4: in x we don't move the coordinate, and in y we move to 100% of the view*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Position that will take into account */
  position: relative;
}

.logo-box {
  position: absolute;
  top: 2.5rem;
  left: 2.5rem;
}

.logo {
  height: 2.188rem;
}

.logo:hover {
  animation: moveInRight 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* Shifted  */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  font-weight: 400;
  text-align: center;
  margin-bottom: 3.75rem;
}

.heading-primary-main {
  display: block;
  letter-spacing: 2.188rem;
  font-size: 3.75rem;
  animation-name: moveInLeft;
  animation-duration: 2s;
  animation-timing-function: ease-out;

  backface-visibility: hidden;
  /* animation-delay: 3s; */
  /* animation: moveInLeft ease-in 1s; */
}

.heading-primary-sub {
  display: block;
  font-size: 1.25rem;
  letter-spacing: 0.938rem;
  font-weight: 700;
  animation: moveInRight 2s ease-out;
}

/*  interactive button with animations */
.btn:link,
.btn:visited {
  /* inline block to add some space, margin  */
  display: inline-block;
  position: relative;
  padding: 0.938rem 2.5rem;
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 6.25rem;
  /* we should add this transition to add a correct animation */
  transition: transform 0.2s ease-out;
  /* for the after to be behind it */
  position: relative;
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn:hover {
  transform: translateY(-3px);
  /* offset  */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
}

/* Virtual element right after the element powerful to add cool animations 
   behind the BTN element
*/
.btn::after {
  /* Content property to appear and display property*/
  content: "";
  display: inline-block;
  /*  same dimension of the button */
  height: 100%;
  width: 100%;
  border-radius: 6.25rem;
  position: absolute;
  top: 0;
  left: 0;
  /* to be behind the element */
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Applies animation start to the element right away */
  animation-fill-mode: backwards;
}

@keyframes moveInLeft {
  0% {
    /* invisible */
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    /* show the element */
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
